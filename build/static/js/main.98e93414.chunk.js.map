{"version":3,"sources":["components/Header.jsx","details/HomeDetails.jsx","components/Home.jsx","details/Fetch.jsx","components/Menu.jsx","components/Pagination.jsx","components/films/Films.jsx","components/Info.jsx","components/films/FilmsInfo.jsx","components/character/Character.jsx","components/character/CharacterInfo.jsx","components/species/Species.jsx","components/species/SpeciesInfo.jsx","components/starships/Starships.jsx","components/starships/StarshipsInfo.jsx","components/vehicles/Vehicles.jsx","components/vehicles/VehiclesInfo.jsx","components/planets/Planets.jsx","components/planets/PlanetsInfo.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","staticUrlImg","homePage","img","text","Home","HomeDetails","map","item","key","Link","to","src","alt","Fetch","url","fetch","then","response","json","Menu","_ref","items","isLoading","images","link","widthImage","Fragment","index","match","name","title","join","onError","e","target","onerror","Pagination","props","countPages","i","pages","push","number","currentPage","Films","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","location","search","Math","ceil","count","setState","results","_this$state","components_Pagination","components_Menu","React","Component","Info","description","FilmsInfo","params","id","components_Info","opening_crawl","director","producer","release_date","episode_id","Character","CharacterInfo","gender","hair_color","skin_color","eye_color","birth_year","height","Species","startIndex","SpeciesInfo","average_height","average_lifespan","classification","designation","eye_colors","hair_colors","language","skin_colors","Starships","StarshipsInfo","model","manufacturer","cost_in_credits","MGLT","cargo_capacity","consumables","crew","hyperdrive_rating","length","max_atmosphering_speed","passengers","starship_class","Vehicles","VehiclesInfo","Planets","PlanetsInfo","rotation_period","orbital_period","diameter","climate","gravity","surface_water","terrain","App","BrowserRouter","basename","process","components_Header","Switch","Route","path","component","Boolean","window","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.98e93414.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => (\r\n  <div className=\"Header\">\r\n    <p className=\"Header__title\">Star Wars</p>\r\n    <p className=\"Header__subtitle\">A VISUAL GUIDE</p>\r\n  </div>\r\n)\r\n\r\nexport default Header","const staticUrlImg = 'https://starwars-visualguide.com/assets/img/categories';\r\n\r\nconst homePage = [\r\n  {\r\n    img: staticUrlImg + \"/character.jpg\",\r\n    text: 'people'\r\n  },\r\n  {\r\n    img: staticUrlImg + \"/films.jpg\",\r\n    text: 'films'\r\n  },\r\n  {\r\n    img: staticUrlImg + \"/species.jpg\",\r\n    text: 'species'\r\n  },\r\n  {\r\n    img: staticUrlImg + \"/starships.jpg\",\r\n    text: 'starships'\r\n  },\r\n  {\r\n    img: staticUrlImg + \"/vehicles.jpg\",\r\n    text: 'vehicles'\r\n  },\r\n  {\r\n    img: staticUrlImg + \"/planets.jpg\",\r\n    text: 'planets'\r\n  },\r\n]\r\n\r\nexport default homePage","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport HomeDetails from './../details/HomeDetails'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"Home\" >\r\n      {HomeDetails.map(item => (\r\n        <div className=\"Home__images\" key={item.text}>\r\n          <Link to={'/' + item.text + '?page=1'}>\r\n            <img className=\"Home__image\" src={item.img} alt={item.text} />\r\n            <span className=\"Home__image-text\">{item.text}</span>\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","const Fetch = (url) => {\r\n  return fetch(url)\r\n    .then(response => response.json())\r\n};\r\n\r\nexport default Fetch","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Menu = ({ items, isLoading, images, link, widthImage }) => {\r\n  return (\r\n    <div>\r\n      {isLoading ?\r\n        <>\r\n          <p className=\"Home__page\"><Link to='/'>Home</Link></p>\r\n          <div className=\"Table\">\r\n            {items.map((item, index) =>\r\n              <Link to={link + items[index].url.match(/\\d+/g)} key={index}>\r\n                <div className={widthImage ? \"Table__block\" : \"Table__block-small\"}>\r\n                  <img\r\n                    alt={item.name || item.title}\r\n                    src={images + item.url.match(/\\d+/g).join('') + '.jpg'}\r\n                    onError={(e) => {\r\n                      e.target.onerror = null; e.target.src = \"https://starwars-visualguide.com/assets/img/placeholder.jpg\"\r\n                    }}\r\n                    className={widthImage ? \"Table__image\" : \"Table__image-small\"}\r\n                  />\r\n                  <div className=\"Table__block-text\">\r\n                    <p\r\n                      className=\"Table__text\"\r\n                    >{item.name || item.title}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            )}\r\n          </div>\r\n        </>\r\n        :\r\n        <h1 className=\"loading\">Loading...</h1>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Pagination = (props) => {\r\n\r\n  const countPages = []\r\n\r\n  for (let i = 1; i <= props.pages; i++) {\r\n    countPages.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Pagination\">\r\n      {countPages.map((number, index) =>\r\n        <Link\r\n          to={'/' + props.title + '?page=' + number}\r\n          key={number}\r\n        >\r\n          <button\r\n            className={+props.currentPage === index + 1 ? 'Pagination__text Pagination__active-page' : 'Pagination__text'}\r\n          >{number}</button>\r\n        </Link>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination","import React from 'react'\r\n\r\nimport Fetch from '../../details/Fetch';\r\nimport Menu from '../Menu'\r\nimport Pagination from '../Pagination'\r\n\r\nclass Films extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      items: null,\r\n      isLoading: false,\r\n      images: null,\r\n      widthImage: true,\r\n      pages: null,\r\n      currentPage: 1,\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { location } = this.props;\r\n    const items = await Fetch('https://swapi.co/api/films/' + location.search)\r\n    const staticUrl = 'https://starwars-visualguide.com/assets/img/films/';\r\n    const pages = Math.ceil(items.count / 10)\r\n\r\n    this.setState({\r\n      items: items.results,\r\n      isLoading: true,\r\n      images: staticUrl,\r\n      pages,\r\n    })\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    const { location } = this.props;\r\n    const items = await Fetch('https://swapi.co/api/films/' + location.search)\r\n    const currentPage = location.search.match(/\\d+/g)\r\n\r\n    if (items.results[0].name === this.state.items[0].name) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      items: items.results,\r\n      currentPage,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { items, isLoading, images, widthImage, pages, currentPage } = this.state\r\n    return (\r\n      pages > 10 ?\r\n        <>\r\n          <Pagination pages={pages} title='films' currentPage={currentPage} />\r\n          <Menu\r\n            items={items}\r\n            isLoading={isLoading}\r\n            images={images}\r\n            link='/films/'\r\n            widthImage={widthImage}\r\n          />\r\n        </>\r\n        :\r\n        <Menu\r\n          items={items}\r\n          isLoading={isLoading}\r\n          images={images}\r\n          link='/films/'\r\n          widthImage={widthImage}\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Films","import React from 'react'\r\n\r\nconst Info = (props) => {\r\n  return (\r\n    <>\r\n      <p className='Info__text'>\r\n        <span\r\n          className='Info__title'>{props.title}</span> {props.description}</p>\r\n      <hr />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Info","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Fetch from '../../details/Fetch';\r\nimport Info from '../Info'\r\n\r\nclass FilmsInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      items: [],\r\n      isLoading: false,\r\n      images: null,\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const items = await Fetch('https://swapi.co/api/films/' + this.props.match.params.id)\r\n    const images = 'https://starwars-visualguide.com/assets/img/films/'\r\n\r\n    this.setState({\r\n      items,\r\n      isLoading: true,\r\n      images,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { items, isLoading, images } = this.state\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Pages\">\r\n          <p className=\"Page\"><Link to='/'>Home / </Link></p>\r\n          <p className=\"Page\"><Link to='/films'>Films</Link></p>\r\n        </div>\r\n        <>\r\n          {isLoading ?\r\n            <div>\r\n              <h1 className='Info__Name'>{items.title}</h1>\r\n              <div className='Info'>\r\n                <img\r\n                  alt={items.title}\r\n                  src={images + items.url.match(/\\d+/g).join('') + '.jpg'}\r\n                  onError={(e) => {\r\n                    e.target.onerror = null; e.target.src = \"https://starwars-visualguide.com/assets/img/placeholder.jpg\"\r\n                  }}\r\n                  className='Info__image'\r\n                />\r\n                <div className=\"Info__wrapper\">\r\n                  <Info title=\"Title: \" description={items.title} />\r\n                  <Info title=\"Opening crawl: \" description={items.opening_crawl} />\r\n                  <Info title=\"Director: \" description={items.director} />\r\n                  <Info title=\"Producer: \" description={items.producer} />\r\n                  <Info title=\"Release date: \" description={items.release_date} />\r\n                  <Info title=\"Episode id: \" description={items.episode_id} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            :\r\n            <h1 className=\"loading\">Loading...</h1>\r\n          }\r\n        </>\r\n      </>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default FilmsInfo","import React from 'react'\r\n\r\nimport Fetch from '../../details/Fetch';\r\nimport Menu from '../Menu'\r\nimport Pagination from '../Pagination'\r\n\r\n\r\nclass Character extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      items: [],\r\n      isLoading: false,\r\n      images: [],\r\n      widthImage: true,\r\n      pages: null,\r\n      currentPage: 1,\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { location } = this.props;\r\n    const items = await Fetch('https://swapi.co/api/people/' + location.search)\r\n    const images = 'https://starwars-visualguide.com/assets/img/characters/'\r\n    const pages = Math.ceil(items.count / 10)\r\n\r\n\r\n    this.setState({\r\n      items: items.results,\r\n      isLoading: true,\r\n      images,\r\n      pages,\r\n    })\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    const { location } = this.props;\r\n    const items = await Fetch('https://swapi.co/api/people/' + location.search)\r\n    const currentPage = location.search.match(/\\d+/g)\r\n\r\n    if (items.results[0].name === this.state.items[0].name) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      items: items.results,\r\n      currentPage,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { items, isLoading, images, widthImage, pages, currentPage } = this.state\r\n\r\n    return (\r\n      <>\r\n        <Pagination pages={pages} title='people' currentPage={currentPage} />\r\n        <Menu\r\n          items={items}\r\n          isLoading={isLoading}\r\n          images={images}\r\n          link='/people/'\r\n          widthImage={widthImage}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Character","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Fetch from '../../details/Fetch';\r\nimport Info from '../Info'\r\n\r\nclass CharacterInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      items: [],\r\n      isLoading: false,\r\n      images: null,\r\n    }\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const items = await Fetch('https://swapi.co/api/people/' + this.props.match.params.id)\r\n    const images = 'https://starwars-visualguide.com/assets/img/characters/'\r\n\r\n    this.setState({\r\n      items,\r\n      isLoading: true,\r\n      images,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { items, isLoading, images } = this.state\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Pages\">\r\n          <p className=\"Page\"><Link to='/'>Home / </Link></p>\r\n          <p className=\"Page\"><Link to='/people'>Character</Link></p>\r\n        </div>\r\n        <>\r\n          {isLoading ?\r\n            <div>\r\n              <h1 className='Info__Name'>{items.name}</h1>\r\n              <div className='Info'>\r\n                <img\r\n                  alt={items.name}\r\n                  src={images + items.url.match(/\\d+/g).join('') + '.jpg'}\r\n                  onError={(e) => {\r\n                    e.target.onerror = null; e.target.src = \"https://starwars-visualguide.com/assets/img/placeholder.jpg\"\r\n                  }}\r\n                  className='Info__image'\r\n                />\r\n                <div className=\"Info__wrapper\">\r\n                  <Info title=\"Name: \" description={items.name} />\r\n                  <Info title=\"Gender: \" description={items.gender} />\r\n                  <Info title=\"Hair color: \" description={items.hair_color} />\r\n                  <Info title=\"Skin color: \" description={items.skin_color} />\r\n                  <Info title=\"Eye color: \" description={items.eye_color} />\r\n                  <Info title=\"Birth year: \" description={items.birth_year} />\r\n                  <Info title=\"Height: \" description={items.height} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            :\r\n            <h1 className=\"loading\">Loading...</h1>\r\n          }\r\n        </>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CharacterInfo","import React from 'react'\r\n\r\nimport Fetch from '../../details/Fetch';\r\nimport Menu from '../Menu'\r\nimport Pagination from '../Pagination'\r\n\r\nclass Species extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      items: [],\r\n      isLoading: false,\r\n      images: [],\r\n      widthImage: true,\r\n      pages: null,\r\n      currentPage: 1,\r\n    }\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { location } = this.props;\r\n    const items = await Fetch('https://swapi.co/api/species/' + location.search)\r\n    const images = 'https://starwars-visualguide.com/assets/img/species/'\r\n    const pages = Math.ceil(items.count / 10)\r\n\r\n    this.setState({\r\n      items: items.results,\r\n      isLoading: true,\r\n      images,\r\n      pages,\r\n    })\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    const { location } = this.props;\r\n    const items = await Fetch('https://swapi.co/api/species/' + location.search)\r\n    const currentPage = location.search.match(/\\d+/g)\r\n\r\n    if (items.results[0].name === this.state.items[0].name) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      items: items.results,\r\n      currentPage,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { items, isLoading, images, widthImage, pages, currentPage } = this.state\r\n\r\n    return (\r\n      <>\r\n        <Pagination pages={pages} title='species' currentPage={currentPage} />\r\n        <Menu\r\n          items={items}\r\n          isLoading={isLoading}\r\n          images={images}\r\n          link='/species/'\r\n          startIndex='5'\r\n          widthImage={widthImage}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Species","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Fetch from '../../details/Fetch';\r\nimport Info from '../Info'\r\n\r\nclass SpeciesInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      items: [],\r\n      isLoading: false,\r\n      images: null,\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const items = await Fetch('https://swapi.co/api/species/' + this.props.match.params.id)\r\n    const images = 'https://starwars-visualguide.com/assets/img/species/'\r\n\r\n    this.setState({\r\n      items,\r\n      isLoading: true,\r\n      images,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { items, isLoading, images } = this.state\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Pages\">\r\n          <p className=\"Page\"><Link to='/'>Home / </Link></p>\r\n          <p className=\"Page\"><Link to='/species'>Species</Link></p>\r\n        </div>\r\n        <>\r\n          {isLoading ?\r\n            <div>\r\n              <h1 className='Info__Name'>{items.name}</h1>\r\n              <div className='Info'>\r\n                <img\r\n                  alt={items.name}\r\n                  src={images + items.url.match(/\\d+/g).join('') + '.jpg'}\r\n                  onError={(e) => {\r\n                    e.target.onerror = null; e.target.src = \"https://starwars-visualguide.com/assets/img/placeholder.jpg\"\r\n                  }}\r\n                  className='Info__image'\r\n                />\r\n                <div className=\"Info__wrapper\">\r\n                  <Info title=\"Name: \" description={items.name} />\r\n                  <Info title=\"Average height: \" description={items.average_height} />\r\n                  <Info title=\"Average lifespan: \" description={items.average_lifespan} />\r\n                  <Info title=\"Classification: \" description={items.classification} />\r\n                  <Info title=\"Designation: \" description={items.designation} />\r\n                  <Info title=\"Eye colors: \" description={items.eye_colors} />\r\n                  <Info title=\"Hair colors: \" description={items.hair_colors} />\r\n                  <Info title=\"Language: \" description={items.language} />\r\n                  <Info title=\"Skin colors: \" description={items.skin_colors} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            :\r\n            <h1 className=\"loading \">Loading...</h1>\r\n          }\r\n        </>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SpeciesInfo","import React from 'react'\r\n\r\nimport Fetch from '../../details/Fetch';\r\nimport Menu from '../Menu'\r\nimport Pagination from '../Pagination'\r\n\r\nclass Starships extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      items: [],\r\n      isLoading: false,\r\n      images: null,\r\n      widthImage: false,\r\n      pages: null,\r\n      currentPage: 1,\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { location } = this.props;\r\n    const items = await Fetch('https://swapi.co/api/starships/' + location.search)\r\n    const images = 'https://starwars-visualguide.com/assets/img/starships/'\r\n    const pages = Math.ceil(items.count / 10)\r\n\r\n    this.setState({\r\n      items: items.results,\r\n      isLoading: true,\r\n      images,\r\n      pages,\r\n    })\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    const { location } = this.props;\r\n    const items = await Fetch('https://swapi.co/api/starships/' + location.search)\r\n    const currentPage = location.search.match(/\\d+/g)\r\n\r\n    if (items.results[0].name === this.state.items[0].name) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      items: items.results,\r\n      currentPage,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { items, isLoading, images, widthImage, pages, currentPage } = this.state\r\n\r\n    return (\r\n      <>\r\n        <Pagination pages={pages} title='starships' currentPage={currentPage} />\r\n        <Menu\r\n          items={items}\r\n          isLoading={isLoading}\r\n          images={images}\r\n          link='/starships/'\r\n          widthImage={widthImage}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Starships","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Fetch from '../../details/Fetch';\r\nimport Info from '../Info'\r\n\r\nclass StarshipsInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      items: [],\r\n      isLoading: false,\r\n      images: null,\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const items = await Fetch('https://swapi.co/api/starships/' + this.props.match.params.id)\r\n    const images = 'https://starwars-visualguide.com/assets/img/starships/'\r\n\r\n    this.setState({\r\n      items,\r\n      isLoading: true,\r\n      images,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { items, isLoading, images } = this.state\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Pages\">\r\n          <p className=\"Page\"><Link to='/'>Home / </Link></p>\r\n          <p className=\"Page\"><Link to='/starships'>Starships</Link></p>\r\n        </div>\r\n        <>\r\n          {isLoading ?\r\n            <div>\r\n              <h1 className='Info__Name'>{items.name}</h1>\r\n              <div className='Info'>\r\n                <img\r\n                  alt={items.name}\r\n                  src={images + items.url.match(/\\d+/g).join('') + '.jpg'}\r\n                  onError={(e) => {\r\n                    e.target.onerror = null; e.target.src = \"https://starwars-visualguide.com/assets/img/placeholder.jpg\"\r\n                  }}\r\n                  className='Info__image'\r\n                />\r\n                <div className=\"Info__wrapper\">\r\n                  <Info title=\"Name: \" description={items.name} />\r\n                  <Info title=\"Model: \" description={items.model} />\r\n                  <Info title=\"Manufacturer: \" description={items.manufacturer} />\r\n                  <Info title=\"Cost_in_credits: \" description={items.cost_in_credits} />\r\n                  <Info title=\"MGLT: \" description={items.MGLT} />\r\n                  <Info title=\"Cargo capacity: \" description={items.cargo_capacity} />\r\n                  <Info title=\"Consumables: \" description={items.consumables} />\r\n                  <Info title=\"Crew: \" description={items.crew} />\r\n                  <Info title=\"Hyperdrive_rating: \" description={items.hyperdrive_rating} />\r\n                  <Info title=\"Length: \" description={items.length} />\r\n                  <Info title=\"Max atmosphering speed: \" description={items.max_atmosphering_speed} />\r\n                  <Info title=\"Passengers: \" description={items.passengers} />\r\n                  <Info title=\"Starship class: \" description={items.starship_class} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            :\r\n            <h1 className=\"loading\">Loading...</h1>\r\n          }\r\n        </>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StarshipsInfo","import React from 'react'\r\n\r\nimport Fetch from '../../details/Fetch';\r\nimport Menu from '../Menu'\r\nimport Pagination from '../Pagination'\r\n\r\nclass Vehicles extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      items: [],\r\n      isLoading: false,\r\n      images: null,\r\n      widthImage: false,\r\n      pages: null,\r\n      currentPage: 1,\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { location } = this.props;\r\n    const items = await Fetch('https://swapi.co/api/vehicles/' + location.search)\r\n    const images = 'https://starwars-visualguide.com/assets/img/vehicles/'\r\n    const pages = Math.ceil(items.count / 10)\r\n\r\n    this.setState({\r\n      items: items.results,\r\n      isLoading: true,\r\n      images,\r\n      pages,\r\n    })\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    const { location } = this.props;\r\n    const items = await Fetch('https://swapi.co/api/vehicles/' + location.search)\r\n    const currentPage = location.search.match(/\\d+/g)\r\n\r\n    if (items.results[0].name === this.state.items[0].name) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      items: items.results,\r\n      currentPage,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { items, isLoading, images, widthImage, pages, currentPage, } = this.state\r\n\r\n    return (\r\n      <>\r\n        <Pagination pages={pages} title='vehicles' currentPage={currentPage} />\r\n        <Menu\r\n          items={items}\r\n          isLoading={isLoading}\r\n          images={images}\r\n          link='/vehicles/'\r\n          widthImage={widthImage}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Vehicles","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Fetch from '../../details/Fetch';\r\nimport Info from '../Info'\r\n\r\nclass VehiclesInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      items: [],\r\n      isLoading: false,\r\n      images: null,\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const items = await Fetch('https://swapi.co/api/vehicles/' + this.props.match.params.id)\r\n    const images = 'https://starwars-visualguide.com/assets/img/vehicles/'\r\n\r\n    this.setState({\r\n      items,\r\n      isLoading: true,\r\n      images,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { items, isLoading, images } = this.state\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Pages\">\r\n          <p className=\"Page\"><Link to='/'>Home / </Link></p>\r\n          <p className=\"Page\"><Link to='/vehicles'>Vehicles</Link></p>\r\n        </div>\r\n        <>\r\n          {isLoading ?\r\n            <div>\r\n              <h1 className='Info__Name'>{items.name}</h1>\r\n              <div className='Info'>\r\n                <img\r\n                  alt={items.name}\r\n                  src={images + items.url.match(/\\d+/g).join('') + '.jpg'}\r\n                  onError={(e) => {\r\n                    e.target.onerror = null; e.target.src = \"https://starwars-visualguide.com/assets/img/placeholder.jpg\"\r\n                  }}\r\n                  className='Info__image'\r\n                />\r\n                <div className=\"Info__wrapper\">\r\n                  <Info title=\"Name: \" description={items.name} />\r\n                  <Info title=\"Model: \" description={items.model} />\r\n                  <Info title=\"Manufacturer: \" description={items.manufacturer} />\r\n                  <Info title=\"Cost in credits: \" description={items.cost_in_credits} />\r\n                  <Info title=\"Length: \" description={items.length} />\r\n                  <Info title=\"Cargo capacity: \" description={items.cargo_capacity} />\r\n                  <Info title=\"Consumables: \" description={items.consumables} />\r\n                  <Info title=\"Crew: \" description={items.crew} />\r\n                  <Info title=\"Max atmosphering speed: \" description={items.max_atmosphering_speed} />\r\n                  <Info title=\"Passengers: \" description={items.passengers} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            :\r\n            <h1 className=\"loading\">Loading...</h1>\r\n          }\r\n        </>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default VehiclesInfo","import React from 'react'\r\n\r\nimport Fetch from '../../details/Fetch';\r\nimport Menu from '../Menu'\r\nimport Pagination from '../Pagination'\r\n\r\nclass Planets extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      items: [],\r\n      isLoading: false,\r\n      images: [],\r\n      widthImage: false,\r\n      pages: null,\r\n      currentPage: 1,\r\n    }\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { location } = this.props;\r\n    const items = await Fetch(' https://swapi.co/api/planets/' + location.search)\r\n    const images = 'https://starwars-visualguide.com/assets/img/planets/'\r\n    const pages = Math.ceil(items.count / 10)\r\n\r\n    this.setState({\r\n      items: items.results,\r\n      isLoading: true,\r\n      images,\r\n      pages,\r\n    })\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    const { location } = this.props;\r\n    const items = await Fetch('https://swapi.co/api/planets/' + location.search)\r\n    const currentPage = location.search.match(/\\d+/g)\r\n\r\n    if (items.results[0].name === this.state.items[0].name) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      items: items.results,\r\n      currentPage,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { items, isLoading, images, widthImage, pages, currentPage } = this.state\r\n\r\n    return (\r\n      <>\r\n        <Pagination pages={pages} title='planets' currentPage={currentPage} />\r\n        <Menu\r\n          items={items}\r\n          isLoading={isLoading}\r\n          images={images}\r\n          link='/planets/'\r\n          startIndex='2'\r\n          widthImage={widthImage}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Planets","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Fetch from '../../details/Fetch';\r\nimport Info from '../Info'\r\n\r\nclass PlanetsInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      items: [],\r\n      isLoading: false,\r\n      images: null,\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const items = await Fetch('https://swapi.co/api/planets/' + this.props.match.params.id)\r\n    const images = 'https://starwars-visualguide.com/assets/img/planets/'\r\n\r\n    this.setState({\r\n      items,\r\n      isLoading: true,\r\n      images,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { items, isLoading, images } = this.state\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Pages\">\r\n          <p className=\"Page\"><Link to='/'>Home / </Link></p>\r\n          <p className=\"Page\"><Link to='/planets'>Planets</Link></p>\r\n        </div>\r\n        <>\r\n          {isLoading ?\r\n            <div>\r\n              <h1 className='Info__Name'>{items.name}</h1>\r\n              <div className='Info'>\r\n                <img\r\n                  alt={items.name}\r\n                  src={images + items.url.match(/\\d+/g).join('') + '.jpg'}\r\n                  onError={(e) => {\r\n                    e.target.onerror = null; e.target.src = \"https://starwars-visualguide.com/assets/img/placeholder.jpg\"\r\n                  }}\r\n                  className='Info__image'\r\n                />\r\n                <div className=\"Info__wrapper\">\r\n                  <Info title=\"Name: \" description={items.name} />\r\n                  <Info title=\"Rotation period: \" description={items.rotation_period} />\r\n                  <Info title=\"Orbital period: \" description={items.orbital_period} />\r\n                  <Info title=\"Diameter: \" description={items.diameter} />\r\n                  <Info title=\"Climate: \" description={items.climate} />\r\n                  <Info title=\"Gravity: \" description={items.gravity} />\r\n                  <Info title=\"Surface water: \" description={items.surface_water} />\r\n                  <Info title=\"Terrain: \" description={items.terrain} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            :\r\n            <h1 className=\"loading\">Loading...</h1>\r\n          }\r\n        </>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PlanetsInfo","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nimport Header from './components/Header'\nimport Home from './components/Home'\n\nimport Films from './components/films/Films'\nimport FilmsInfo from './components/films/FilmsInfo'\nimport Character from './components/character/Character'\nimport CharacterInfo from './components/character/CharacterInfo'\nimport Species from './components/species/Species'\nimport SpeciesInfo from './components/species/SpeciesInfo'\nimport Starships from './components/starships/Starships'\nimport StarshipsInfo from './components/starships/StarshipsInfo'\nimport Vehicles from './components/vehicles/Vehicles'\nimport VehiclesInfo from './components/vehicles/VehiclesInfo'\nimport Planets from './components/planets/Planets'\nimport PlanetsInfo from './components/planets/PlanetsInfo'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <>\n          <Header />\n          <div>\n            <Switch>\n              <Route path='/people/:id' component={CharacterInfo} />\n              <Route path=\"/people\" component={Character} />\n              <Route path='/films/:id' component={FilmsInfo} />\n              <Route path=\"/films\" component={Films} />\n              <Route path=\"/species/:id\" component={SpeciesInfo} />\n              <Route path=\"/species\" component={Species} />\n              <Route path=\"/starships/:id\" component={StarshipsInfo} />\n              <Route path=\"/starships\" component={Starships} />\n              <Route path=\"/vehicles/:id\" component={VehiclesInfo} />\n              <Route path=\"/vehicles\" component={Vehicles} />\n              <Route path=\"/planets/:id\" component={PlanetsInfo} />\n              <Route path=\"/planets\" component={Planets} />\n              <Route path=\"/\" component={Home} />\n            </Switch>\n          </div>\n        </>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}